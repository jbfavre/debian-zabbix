Description: Add CoreOS support
 Allow running and monitoring on CoreOS servers 
Author: Boris HUISGEN <bhuisgen@hbis.fr>
Last-Update: 2014-10-10
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/include/config.h.in
+++ b/include/config.h.in
@@ -21,6 +21,9 @@
 /* Define to 1 if you have the <conio.h> header file. */
 #undef HAVE_CONIO_H
 
+/* Define to 1 if CoreOS features should be enabled. */
+#undef HAVE_COREOS
+
 /* Define to 1 if you have the <ctype.h> header file. */
 #undef HAVE_CTYPE_H
 
--- a/src/libs/zbxsysinfo/linux/boottime.c
+++ b/src/libs/zbxsysinfo/linux/boottime.c
@@ -27,7 +27,11 @@
 	int		ret = SYSINFO_RET_FAIL;
 	unsigned long	value;
 
+#ifdef HAVE_COREOS
+	if (NULL == (f = fopen("/coreos/proc/stat", "r")))
+#else
 	if (NULL == (f = fopen("/proc/stat", "r")))
+#endif
 		return ret;
 
 	/* find boot time entry "btime [boot time]" */
--- a/src/libs/zbxsysinfo/linux/cpu.c
+++ b/src/libs/zbxsysinfo/linux/cpu.c
@@ -150,7 +150,11 @@
 	zbx_uint64_t	value = 0;
 	FILE		*f;
 
+#ifdef HAVE_COREOS
+	if (NULL == (f = fopen("/coreos/proc/stat", "r")))
+#else
 	if (NULL == (f = fopen("/proc/stat", "r")))
+#endif
 		return SYSINFO_RET_FAIL;
 
 	while (NULL != fgets(line, sizeof(line), f))
@@ -177,7 +181,11 @@
 	zbx_uint64_t	value = 0;
 	FILE		*f;
 
+#ifdef HAVE_COREOS
+	if (NULL == (f = fopen("/coreos/proc/stat", "r")))
+#else
 	if (NULL == (f = fopen("/proc/stat", "r")))
+#endif
 		return SYSINFO_RET_FAIL;
 
 	while (NULL != fgets(line, sizeof(line), f))
--- a/src/libs/zbxsysinfo/linux/diskio.c
+++ b/src/libs/zbxsysinfo/linux/diskio.c
@@ -22,12 +22,20 @@
 #include "stats.h"
 #include "diskdevices.h"
 
+#ifdef HAVE_COREOS
+#define ZBX_DEV_PFX	"/coreos/dev/"
+#else
 #define ZBX_DEV_PFX	"/dev/"
+#endif
 #define ZBX_DEV_READ	0
 #define ZBX_DEV_WRITE	1
 
 #if defined(KERNEL_2_4)
+#ifdef HAVE_COREOS
+#	define INFO_FILE_NAME	"/coreos/proc/partitions"
+#else
 #	define INFO_FILE_NAME	"/proc/partitions"
+#endif
 #	define PARSE(line)	if (sscanf(line, ZBX_FS_UI64 ZBX_FS_UI64 " %*d %s " 		\
 					ZBX_FS_UI64 " %*d " ZBX_FS_UI64 " %*d "			\
 					ZBX_FS_UI64 " %*d " ZBX_FS_UI64 " %*d %*d %*d %*d",	\
@@ -40,7 +48,11 @@
 				&ds[ZBX_DSTAT_W_SECT]						\
 				) != 7) continue
 #else
+#ifdef HAVE_COREOS
+#	define INFO_FILE_NAME	"/coreos/proc/diskstats"
+#else
 #	define INFO_FILE_NAME	"/proc/diskstats"
+#endif
 #	define PARSE(line)	if (sscanf(line, ZBX_FS_UI64 ZBX_FS_UI64 " %s "			\
 					ZBX_FS_UI64 " %*d " ZBX_FS_UI64 " %*d "			\
 					ZBX_FS_UI64 " %*d " ZBX_FS_UI64 " %*d %*d %*d %*d",	\
--- a/src/libs/zbxsysinfo/linux/diskspace.c
+++ b/src/libs/zbxsysinfo/linux/diskspace.c
@@ -104,7 +104,11 @@
 
 	zbx_json_addarray(&j, ZBX_PROTO_TAG_DATA);
 
+#ifdef HAVE_COREOS
+	if (NULL != (f = fopen("/coreos/proc/1/mounts", "r")))
+#else
 	if (NULL != (f = fopen("/proc/mounts", "r")))
+#endif
 	{
 		while (NULL != fgets(line, sizeof(line), f))
 		{
--- a/src/libs/zbxsysinfo/linux/hardware.h
+++ b/src/libs/zbxsysinfo/linux/hardware.h
@@ -24,7 +24,11 @@
 #define SMBIOS_STATUS_ERROR	2
 #define SMBIOS_STATUS_OK	3
 
+#ifdef HAVE_COREOS
+#define DEV_MEM			"/coreos/dev/mem"
+#else
 #define DEV_MEM			"/dev/mem"
+#endif
 #define SMBIOS_ENTRY_POINT_SIZE	0x20
 #define DMI_HEADER_SIZE		4
 
@@ -36,9 +40,16 @@
 #define DMI_GET_MODEL		0x04
 #define DMI_GET_SERIAL		0x08
 
+#ifdef HAVE_COREOS
+#define CPU_MAX_FREQ_FILE	"/coreos/sys/devices/system/cpu/cpu%d/cpufreq/cpuinfo_max_freq"
+#else
 #define CPU_MAX_FREQ_FILE	"/sys/devices/system/cpu/cpu%d/cpufreq/cpuinfo_max_freq"
-
+#endif
+#ifdef HAVE_COREOS
+#define HW_CPU_INFO_FILE	"/coreos/proc/cpuinfo"
+#else
 #define HW_CPU_INFO_FILE	"/proc/cpuinfo"
+#endif
 #define HW_CPU_ALL_CPUS		-1
 #define HW_CPU_SHOW_ALL		1
 #define HW_CPU_SHOW_MAXFREQ	2
--- a/src/libs/zbxsysinfo/linux/kernel.c
+++ b/src/libs/zbxsysinfo/linux/kernel.c
@@ -44,7 +44,11 @@
 	int		ret = SYSINFO_RET_FAIL;
 	zbx_uint64_t	value;
 
+#ifdef HAVE_COREOS
+	if (SYSINFO_RET_OK == read_uint64_from_procfs("/coreos/proc/sys/fs/file-max", &value))
+#else
 	if (SYSINFO_RET_OK == read_uint64_from_procfs("/proc/sys/fs/file-max", &value))
+#endif
 	{
 		SET_UI64_RESULT(result, value);
 		ret = SYSINFO_RET_OK;
@@ -58,7 +62,11 @@
 	int		ret = SYSINFO_RET_FAIL;
 	zbx_uint64_t	value;
 
+#ifdef HAVE_COREOS
+	if (SYSINFO_RET_OK == read_uint64_from_procfs("/coreos/proc/sys/kernel/pid_max", &value))
+#else
 	if (SYSINFO_RET_OK == read_uint64_from_procfs("/proc/sys/kernel/pid_max", &value))
+#endif
 	{
 		SET_UI64_RESULT(result, value);
 		ret = SYSINFO_RET_OK;
--- a/src/libs/zbxsysinfo/linux/memory.c
+++ b/src/libs/zbxsysinfo/linux/memory.c
@@ -62,7 +62,11 @@
 	char		*t, c[MAX_STRING_LEN];
 	zbx_uint64_t	res = 0;
 
+#ifdef HAVE_COREOS
+	if (NULL == (f = fopen("/coreos/proc/meminfo", "r")))
+#else
 	if (NULL == (f = fopen("/proc/meminfo", "r")))
+#endif
 		return SYSINFO_RET_FAIL;
 
 	while (NULL != fgets(c, sizeof(c), f))
--- a/src/libs/zbxsysinfo/linux/net.c
+++ b/src/libs/zbxsysinfo/linux/net.c
@@ -44,7 +44,11 @@
 	if (NULL == if_name || '\0' == *if_name)
 		return SYSINFO_RET_FAIL;
 
+#ifdef HAVE_COREOS
+	if (NULL != (f = fopen("/coreos/proc/1/net/dev", "r")))
+#else
 	if (NULL != (f = fopen("/proc/net/dev", "r")))
+#endif
 	{
 		while (NULL != fgets(line, sizeof(line), f))
 		{
@@ -246,7 +250,11 @@
 
 	zbx_json_addarray(&j, ZBX_PROTO_TAG_DATA);
 
+#ifdef HAVE_COREOS
+	if (NULL != (f = fopen("/coreos/proc/1/net/dev", "r")))
+#else
 	if (NULL != (f = fopen("/proc/net/dev", "r")))
+#endif
 	{
 		while (NULL != fgets(line, sizeof(line), f))
 		{
@@ -295,7 +303,11 @@
 
 	buffer = zbx_malloc(NULL, buffer_alloc);
 
+#ifdef HAVE_COREOS
+	if (0 < (n = proc_read_file("/coreos/proc/1/net/tcp", &buffer, &buffer_alloc)))
+#else
 	if (0 < (n = proc_read_file("/proc/net/tcp", &buffer, &buffer_alloc)))
+#endif
 	{
 		ret = SYSINFO_RET_OK;
 
@@ -310,7 +322,11 @@
 		}
 	}
 
+#ifdef HAVE_COREOS
+	if (0 < (n = proc_read_file("/coreos/proc/1/net/tcp6", &buffer, &buffer_alloc)))
+#else
 	if (0 < (n = proc_read_file("/proc/net/tcp6", &buffer, &buffer_alloc)))
+#endif
 	{
 		ret = SYSINFO_RET_OK;
 
@@ -347,7 +363,11 @@
 
 	buffer = zbx_malloc(NULL, buffer_alloc);
 
+#ifdef HAVE_COREOS
+	if (0 < (n = proc_read_file("/coreos/proc/1/net/udp", &buffer, &buffer_alloc)))
+#else
 	if (0 < (n = proc_read_file("/proc/net/udp", &buffer, &buffer_alloc)))
+#endif
 	{
 		ret = SYSINFO_RET_OK;
 
@@ -362,7 +382,11 @@
 		}
 	}
 
+#ifdef HAVE_COREOS
+	if (0 < (n = proc_read_file("/coreos/proc/1/net/udp6", &buffer, &buffer_alloc)))
+#else
 	if (0 < (n = proc_read_file("/proc/net/udp6", &buffer, &buffer_alloc)))
+#endif
 	{
 		ret = SYSINFO_RET_OK;
 
--- a/src/libs/zbxsysinfo/linux/proc.c
+++ b/src/libs/zbxsysinfo/linux/proc.c
@@ -240,7 +240,11 @@
 
 	proccomm = get_rparam(request, 3);
 
+#ifdef HAVE_COREOS
+	if (NULL == (dir = opendir("/coreos/proc")))
+#else
 	if (NULL == (dir = opendir("/proc")))
+#endif
 		return SYSINFO_RET_FAIL;
 
 	while (NULL != (entries = readdir(dir)))
@@ -253,12 +257,19 @@
 		if (0 == strncmp(entries->d_name, "self", MAX_STRING_LEN))
 			continue;
 
+#ifdef HAVE_COREOS
+		zbx_snprintf(tmp, sizeof(tmp), "/coreos/proc/%s/cmdline", entries->d_name);
+#else
 		zbx_snprintf(tmp, sizeof(tmp), "/proc/%s/cmdline", entries->d_name);
-
+#endif
 		if (NULL == (f_cmd = fopen(tmp, "r")))
 			continue;
 
+#ifdef HAVE_COREOS
+		zbx_snprintf(tmp, sizeof(tmp), "/coreos/proc/%s/status", entries->d_name);
+#else
 		zbx_snprintf(tmp, sizeof(tmp), "/proc/%s/status", entries->d_name);
+#endif
 
 		if (NULL == (f_stat = fopen(tmp, "r")))
 			continue;
@@ -366,7 +377,11 @@
 
 	proccomm = get_rparam(request, 3);
 
+#ifdef HAVE_COREOS
+	if (NULL == (dir = opendir("/coreos/proc")))
+#else
 	if (NULL == (dir = opendir("/proc")))
+#endif
 		return SYSINFO_RET_FAIL;
 
 	while (NULL != (entries = readdir(dir)))
@@ -379,13 +394,19 @@
 		if (0 == strncmp(entries->d_name, "self", MAX_STRING_LEN))
 			continue;
 
+#ifdef HAVE_COREOS
+		zbx_snprintf(tmp, sizeof(tmp), "/coreos/proc/%s/cmdline", entries->d_name);
+#else
 		zbx_snprintf(tmp, sizeof(tmp), "/proc/%s/cmdline", entries->d_name);
-
+#endif
 		if (NULL == (f_cmd = fopen(tmp, "r")))
 			continue;
 
+#ifdef HAVE_COREOS
+		zbx_snprintf(tmp, sizeof(tmp), "/coreos/proc/%s/status", entries->d_name);
+#else
 		zbx_snprintf(tmp, sizeof(tmp), "/proc/%s/status", entries->d_name);
-
+#endif
 		if (NULL == (f_stat = fopen(tmp, "r")))
 			continue;
 
--- a/src/libs/zbxsysinfo/linux/sensors.c
+++ b/src/libs/zbxsysinfo/linux/sensors.c
@@ -26,10 +26,18 @@
 #define DO_MIN	3
 
 #if defined(KERNEL_2_4)
+#ifdef HAVE_COREOS
+#define DEVICE_DIR	"/coreos/proc/sys/dev/sensors"
+#else
 #define DEVICE_DIR	"/proc/sys/dev/sensors"
+#endif
+#else
+#ifdef HAVE_COREOS
+#define DEVICE_DIR	"/coreos/sys/class/hwmon"
 #else
 #define DEVICE_DIR	"/sys/class/hwmon"
 #endif
+#endif
 
 #define ATTR_MAX	128
 
@@ -175,8 +183,11 @@
 		}
 		else
 		{
+#ifdef HAVE_COREOS
+			zbx_snprintf(bus_path, sizeof(bus_path), "/coreos/sys/class/i2c-adapter/i2c-%d/device", bus_i2c);
+#else
 			zbx_snprintf(bus_path, sizeof(bus_path), "/sys/class/i2c-adapter/i2c-%d/device", bus_i2c);
-
+#endif
 			if (NULL != (bus_attr = sysfs_read_attr(bus_path)))
 			{
 				if (0 != strncmp(bus_attr, "ISA ", 4))
--- a/src/libs/zbxsysinfo/linux/swap.c
+++ b/src/libs/zbxsysinfo/linux/swap.c
@@ -65,7 +65,11 @@
 swap_stat_t;
 
 #ifdef KERNEL_2_4
+#ifdef HAVE_COREOS
+#	define INFO_FILE_NAME	"/coreos/proc/partitions"
+#else
 #	define INFO_FILE_NAME	"/proc/partitions"
+#endif
 #	define PARSE(line)								\
 											\
 		if (6 != sscanf(line, "%d %d %*d %*s "					\
@@ -79,7 +83,11 @@
 				&result->wsect		/* wsect */			\
 				)) continue
 #else
+#ifdef HAVE_COREOS
+#	define INFO_FILE_NAME	"/coreos/proc/diskstats"
+#else
 #	define INFO_FILE_NAME	"/proc/diskstats"
+#endif
 #	define PARSE(line)								\
 											\
 		if (6 != sscanf(line, "%d %d %*s "					\
@@ -145,10 +153,19 @@
 	FILE	*f;
 
 #ifdef KERNEL_2_4
+#ifdef HAVE_COREOS
+	if (NULL != (f = fopen("/coreos/proc/stat", "r")))
+#else
 	if (NULL != (f = fopen("/proc/stat", "r")))
+#endif
+}
+#else
+#ifdef HAVE_COREOS
+	if (NULL != (f = fopen("/coreos/proc/vmstat", "r")))
 #else
 	if (NULL != (f = fopen("/proc/vmstat", "r")))
 #endif
+#endif
 	{
 		while (NULL != fgets(line, sizeof(line), f))
 		{
@@ -202,15 +219,27 @@
 		ret = get_swap_pages(result);
 		swapdev = NULL;
 	}
+#ifdef HAVE_COREOS
+        else if (0 != strncmp(swapdev, "/coreos/dev/", 5))
+#else
 	else if (0 != strncmp(swapdev, "/dev/", 5))
+#endif
 		offset = 5;
 
+#ifdef HAVE_COREOS
+	if (NULL == (f = fopen("/coreos/proc/swaps", "r")))
+#else
 	if (NULL == (f = fopen("/proc/swaps", "r")))
+#endif
 		return ret;
 
 	while (NULL != fgets(line, sizeof(line), f))
 	{
+#ifdef HAVE_COREOS
+                if (0 != strncmp(line, "/coreos/dev/", 5))
+#else
 		if (0 != strncmp(line, "/dev/", 5))
+#endif
 			continue;
 
 		if (NULL == (s = strchr(line, ' ')))
--- a/src/zabbix_agent/cpustat.c
+++ b/src/zabbix_agent/cpustat.c
@@ -266,7 +266,11 @@
 	FILE		*file;
 	char		line[1024];
 	unsigned char	*cpu_status = NULL;
-	const char	*filename = "/proc/stat";
+#ifdef HAVE_COREOS
+	const char	*filename = "/coreos/proc/stat";
+#else
+	const char  *filename = "/proc/stat";
+#endif
 
 #elif defined(HAVE_SYS_PSTAT_H)
 
--- a/src/zabbix_agent/stats.c
+++ b/src/zabbix_agent/stats.c
@@ -97,7 +97,11 @@
 	FILE	*f = NULL;
 	int	ncpu = 0;
 
+#ifdef HAVE_COREOS
+	if (NULL == (file = fopen("/coreos/proc/cpuinfo", "r")))
+#else
 	if (NULL == (file = fopen("/proc/cpuinfo", "r")))
+#endif
 		goto return_one;
 
 	while (NULL != fgets(line, 1024, file))
--- a/src/libs/zbxsysinfo/linux/software.h
+++ b/src/libs/zbxsysinfo/linux/software.h
@@ -20,9 +20,15 @@
 #ifndef ZABBIX_SOFTWARE_H
 #define ZABBIX_SOFTWARE_H
 
-#define SW_OS_FULL	"/proc/version"
+#ifdef HAVE_COREOS
+#define SW_OS_FULL	"/coreos/proc/version"
+#define SW_OS_SHORT     "/coreos/proc/version_signature"
+#define SW_OS_NAME      "/coreos/etc/issue.net"
+#else
+#define SW_OS_FULL      "/proc/version"
 #define SW_OS_SHORT	"/proc/version_signature"
 #define SW_OS_NAME	"/etc/issue.net"
+#endif
 
 typedef struct
 {
--- a/configure.ac
+++ b/configure.ac
@@ -1050,6 +1050,14 @@
 esac],
 [ipv6=no])
 
+AC_ARG_ENABLE(coreos, [  --enable-coreos         Turn on support of CoreOS],
+[case "${enableval}" in
+  yes) coreos=yes ;;
+  no)  coreos=no ;;
+  *) AC_MSG_ERROR([bad value ${enableval} for --enable-coreos]) ;;
+esac],
+[ipv6=no])
+
 have_db="no"
 have_unixodbc="no"
 have_web_monitoring="no"
@@ -1057,6 +1065,7 @@
 have_snmp="no"
 have_ipmi="no"
 have_ipv6="no"
+have_coreos="no"
 have_ssh2="no"
 
 if test "x$ipv6" = "xyes"; then
@@ -1064,6 +1073,11 @@
 	have_ipv6="yes"
 fi
 
+if test "x$coreos" = "xyes"; then
+  AC_DEFINE(HAVE_COREOS,1,[Define to 1 if CoreOS features should be enabled.])
+  have_coreos="yes"
+fi
+
 if test "x$server" = "xyes" || test "x$proxy" = "xyes"; then
 
 	have_multirow_insert="no"
