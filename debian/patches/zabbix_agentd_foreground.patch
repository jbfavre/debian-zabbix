--- a/include/common.h
+++ b/include/common.h
@@ -1099,4 +1099,7 @@ int	parse_serveractive_element(char *str
 
 char	*zbx_dyn_escape_shell_single_quote(const char *text);
 
+#define ZBX_RUN_BACKGROUND      0
+#define ZBX_RUN_FOREGROUND      1
+
 #endif
--- a/include/daemon.h
+++ b/include/daemon.h
@@ -28,7 +28,7 @@ extern char	*CONFIG_PID_FILE;
 
 #include "threads.h"
 
-int	daemon_start(int allow_root, const char *user);
+int	daemon_start(int allow_root, const char *user, int run_foreground);
 void	daemon_stop();
 
 int	zbx_sigusr_send(int flags);
@@ -36,6 +36,6 @@ int	zbx_sigusr_send(int flags);
 #define ZBX_IS_RUNNING()	1
 #define ZBX_DO_EXIT()
 
-#define START_MAIN_ZABBIX_ENTRY(a, u)	daemon_start(a, u)
+#define START_MAIN_ZABBIX_ENTRY(a, u, f)	daemon_start(a, u, f)
 
 #endif	/* ZABBIX_DAEMON_H */
--- a/src/libs/zbxnix/daemon.c
+++ b/src/libs/zbxnix/daemon.c
@@ -281,16 +281,17 @@ static void	set_daemon_signal_handlers()
  *                                                                            *
  * Purpose: init process as daemon                                            *
  *                                                                            *
- * Parameters: allow_root - allow root permission for application             *
- *             user       - user on the system to which to drop the           *
- *                          privileges                                        *
+ * Parameters: allow_root     - allow root permission for application         *
+ *             user           - user on the system to which to drop the       *
+ *                              privileges                                    *
+ *             run_foreground - should it close its controling tty            *
  *                                                                            *
  * Author: Alexei Vladishev                                                   *
  *                                                                            *
  * Comments: it doesn't allow running under 'root' if allow_root is zero      *
  *                                                                            *
  ******************************************************************************/
-int	daemon_start(int allow_root, const char *user)
+int	daemon_start(int allow_root, const char *user, int run_foreground)
 {
 	pid_t		pid;
 	struct passwd	*pwd;
@@ -345,15 +346,22 @@ int	daemon_start(int allow_root, const c
 #endif
 	}
 
-	if (0 != (pid = zbx_fork()))
-		exit(EXIT_SUCCESS);
+	if ( ZBX_RUN_FOREGROUND != run_foreground)
+		if (0 != (pid = zbx_fork()))
+			exit(EXIT_SUCCESS);
 
 	setsid();
 
 	signal(SIGHUP, SIG_IGN);
 
-	if (0 != (pid = zbx_fork()))
-		exit(EXIT_SUCCESS);
+	if ( ZBX_RUN_FOREGROUND == run_foreground) {
+		zabbix_log(LOG_LEVEL_INFORMATION, "Running in foreground...");
+	} else {
+		if (0 != (pid = zbx_fork()))
+			exit(EXIT_SUCCESS);
+	}
+
+
 
 	if (-1 == chdir("/"))	/* this is to eliminate warning: ignoring return value of chdir */
 		assert(0);
--- a/src/zabbix_agent/zabbix_agentd.c
+++ b/src/zabbix_agent/zabbix_agentd.c
@@ -62,6 +62,8 @@ const char	*progname = NULL;
 	static char	DEFAULT_CONFIG_FILE[]	= SYSCONFDIR "/zabbix_agentd.conf";
 #endif
 
+int CONFIG_FOREGROUND = ZBX_RUN_BACKGROUND;
+
 /* application TITLE */
 const char	title_message[] = "zabbix_agentd"
 #if defined(_WIN64)
@@ -104,6 +106,7 @@ const char	*help_message[] = {
 	"",
 	"Options:",
 	"  -c --config config-file               Absolute path to the configuration file",
+	"  -f --foreground                       Run in foreground don't fork",
 	"  -p --print                            Print known items and exit",
 	"  -t --test item-key                    Test specified item and exit",
 #ifdef _WINDOWS
@@ -141,6 +144,7 @@ const char	*help_message[] = {
 /* COMMAND LINE OPTIONS */
 static struct zbx_option	longopts[] =
 {
+	{"foreground",		0,	NULL,	'f'},
 	{"config",		1,	NULL,	'c'},
 	{"help",		0,	NULL,	'h'},
 	{"version",		0,	NULL,	'V'},
@@ -161,7 +165,7 @@ static struct zbx_option	longopts[] =
 };
 
 static char	shortopts[] =
-	"c:hVpt:"
+	"c:hfVpt:"
 #ifndef _WINDOWS
 	"R:"
 #else
@@ -262,6 +266,9 @@ static int	parse_commandline(int argc, c
 	{
 		switch (ch)
 		{
+			case 'f':
+				CONFIG_FOREGROUND = ZBX_RUN_FOREGROUND;
+				break;
 			case 'c':
 				opt_c++;
 				if (NULL == CONFIG_FILE)
@@ -1095,7 +1102,7 @@ int	main(int argc, char **argv)
 			break;
 	}
 
-	START_MAIN_ZABBIX_ENTRY(CONFIG_ALLOW_ROOT, CONFIG_USER);
+	START_MAIN_ZABBIX_ENTRY(CONFIG_ALLOW_ROOT, CONFIG_USER, CONFIG_FOREGROUND);
 
 	exit(EXIT_SUCCESS);
 }
--- a/src/zabbix_proxy/proxy.c
+++ b/src/zabbix_proxy/proxy.c
@@ -69,6 +69,7 @@ const char	*help_message[] = {
 	"",
 	"Options:",
 	"  -c --config config-file               Absolute path to the configuration file",
+	"  -f --foreground                       Run in foreground don't fork",
 	"  -R --runtime-control runtime-option   Perform administrative functions",
 	"",
 	"    Runtime control options:",
@@ -92,6 +93,7 @@ const char	*help_message[] = {
 /* long options */
 static struct zbx_option	longopts[] =
 {
+	{"foreground",          0,      NULL,   'f'},
 	{"config",		1,	NULL,	'c'},
 	{"runtime-control",	1,	NULL,	'R'},
 	{"help",		0,	NULL,	'h'},
@@ -100,7 +102,7 @@ static struct zbx_option	longopts[] =
 };
 
 /* short options */
-static char	shortopts[] = "c:n:hVR:";
+static char	shortopts[] = "c:n:fhVR:";
 
 /* end of COMMAND LINE OPTIONS */
 
@@ -210,6 +212,7 @@ char	*CONFIG_LOAD_MODULE_PATH	= NULL;
 char	**CONFIG_LOAD_MODULE		= NULL;
 
 char	*CONFIG_USER			= NULL;
+int    CONFIG_FOREGROUND               = ZBX_RUN_BACKGROUND;
 
 /* web monitoring */
 #ifdef HAVE_LIBCURL
@@ -662,6 +665,9 @@ int	main(int argc, char **argv)
 	{
 		switch (ch)
 		{
+			case 'f':
+				CONFIG_FOREGROUND = ZBX_RUN_FOREGROUND;
+				break;
 			case 'c':
 				opt_c++;
 				if (NULL == CONFIG_FILE)
@@ -727,7 +733,7 @@ int	main(int argc, char **argv)
 	init_ipmi_handler();
 #endif
 
-	return daemon_start(CONFIG_ALLOW_ROOT, CONFIG_USER);
+	return daemon_start(CONFIG_ALLOW_ROOT, CONFIG_USER, CONFIG_FOREGROUND);
 }
 
 int	MAIN_ZABBIX_ENTRY()
--- a/src/zabbix_server/server.c
+++ b/src/zabbix_server/server.c
@@ -72,6 +72,7 @@ const char	*help_message[] = {
 	"The core daemon of Zabbix software.",
 	"",
 	"Options:",
+	"  -f --foreground                       Run in foreground don't fork",
 	"  -c --config config-file               Absolute path to the configuration file",
 	"  -R --runtime-control runtime-option   Perform administrative functions",
 	"",
@@ -96,6 +97,7 @@ const char	*help_message[] = {
 /* long options */
 static struct zbx_option	longopts[] =
 {
+	{"foreground",          0,      NULL,   'f'},
 	{"config",		1,	NULL,	'c'},
 	{"runtime-control",	1,	NULL,	'R'},
 	{"help",		0,	NULL,	'h'},
@@ -104,7 +106,7 @@ static struct zbx_option	longopts[] =
 };
 
 /* short options */
-static char	shortopts[] = "c:n:hVR:";
+static char	shortopts[] = "c:n:fhVR:";
 
 /* end of COMMAND LINE OPTIONS */
 
@@ -205,6 +207,7 @@ char	*CONFIG_LOAD_MODULE_PATH	= NULL;
 char	**CONFIG_LOAD_MODULE		= NULL;
 
 char	*CONFIG_USER			= NULL;
+int    CONFIG_FOREGROUND               = ZBX_RUN_BACKGROUND;
 
 /* web monitoring */
 #ifdef HAVE_LIBCURL
@@ -627,6 +630,9 @@ int	main(int argc, char **argv)
 	{
 		switch (ch)
 		{
+			case 'f':
+				CONFIG_FOREGROUND = ZBX_RUN_FOREGROUND;
+				break;
 			case 'c':
 				opt_c++;
 				if (NULL == CONFIG_FILE)
@@ -692,7 +698,7 @@ int	main(int argc, char **argv)
 	init_ipmi_handler();
 #endif
 
-	return daemon_start(CONFIG_ALLOW_ROOT, CONFIG_USER);
+	return daemon_start(CONFIG_ALLOW_ROOT, CONFIG_USER, CONFIG_FOREGROUND);
 }
 
 int	MAIN_ZABBIX_ENTRY()
